body,h1,h2,h3,h4,h5,h6,p,span,button,div,li,ul,ol,dd,dt,dl,img,a,i,select,option,header,hgroup,footer,article,aside,section,
strong,del,input,label,textarea,button,table,tbody,thead,td,tfoot,th,time,embed,sub,em{
    margin:0;padding: 0;box-sizing: border-box;
}

body{
    //x轴不会出现滚动条
    overflow-x: hidden;overflow-y:auto;
}


a,a:hover{text-decoration:none;}

a{display: inline-block;cursor: pointer;}

a:visited{
    text-decoration: none;
}

button{cursor: pointer;}

li{list-style:none;}

img,input,textarea,button{border:none;}

i,em{font-style:normal;}

span,button,input,i,em{display:inline-block;}

html{font-family: "microsoft yahei",'Helvetica Neue',Helvetica,'PingFang SC','Hiragino Sans GB','Microsoft YaHei',Arial,sans-serif;}

h1,h2,h3,h4,h5{font-weight: normal;}

.inner{width:1200px;margin: 0 auto;}

// 给父盒子的下一个元素清除浮动
.clear{&::after{content:"";display:block;font-size:0;line-height:0;clear:both;*zoom:1;margin: 0;padding: 0;}}

// 给盒子本身的下一个元素清除浮动
.clearfix{content:"";display:block;font-size:0;line-height:0;clear:both;*zoom:1;margin: 0;padding: 0;}

// 指定元素不能成为鼠标事件的目标,不能被事件捕获,在js的事件监听中相当于穿透这个DOM元素直接获取下一层的DOM,消除延迟卡顿现象
.through{
    pointer-events: none;
}


// 参考文献 : http://div.io/topic/1092
// 使用说明 : 
// 1.forRemDpr.js要在css样式引入前引入
// 2.宽度可以使用百分比,也可以使用.px2rem函数把px单位转成rem单位,切换到不同的宽度的设备都可以保持还原设计稿哦
// 3.

// @iphone6是设计稿为iphone6(750,1334)的基准值
@iphone6 : 75 ;

// 通用px单位转rem单位
.rem(@name , @px ){
    @{name} : @px / @iphone6 * 1rem;
}

// --------------------------------------------
// 设计稿的宽度
@designWidth : 750;

// 设置宽度百分比的类函数,
// 使用方法,量设计稿iphone6的宽度(不带单位)作为参数输入即可,不传入参数默认750即100%哦
// 当然也可以直接使用.px2rem函数
.width(@width:750){
    width : @width / @designWidth * 100%;
}


.box1{
    float:left;.rem(width,187.5);.rem(height,187.5);background: red;
}

.box2{
    float:left;.rem(width,187.5);.rem(height,187.5);background: paleturquoise;
}

.box3{
    float:left;.rem(width,187.5);.rem(height,187.5);background: peru;
}
.box4{
    float:left;.rem(width,187.5);.rem(height,187.5);background: cornflowerblue;
}

