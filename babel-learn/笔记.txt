1.npm init --yes
2.npm install babel-cli --save-dev   npm install babel -g 全局安装babel
npm install babel-core --save-dev而不是npm install babel --save-dev
3../node_modules/.bin/babel -help
4.新建一个script.js在js目录下
5.babel ./js/script.js或者 babel js/script.js执行编译在git bash中
6.babel ./js/script.js -o ./js/script-compiled.js 把script.js编译的结果保存在一个文件里
7.-o的全写是--out-file
8.babel ./src -d ./lib  把src目录下的所有js文件编译到lib目录下
9.-d的全写是--out-dir
10.babel src -w -d lib 实时监控src目录下的所有js文件编译到lib目录下
11.-w的全称是--watch 注意要写在所有参数的前面
12.在package.json的"scripts"中自定义脚本命令 "babel" : babel src -w -d lib
这样就可以npm run babel来执行babel src -w -d lib命令
13.babel还需要安装插件才能编译es6(es2015)
14.npm install babel-preset-es2015 --save-dev 这个插件包含es6的一系列插件
15.在项目根目录下新建.babelrc来配置babel
16.在.babelrc文件中写: 意思是在babel编译中使用babel-preset-es2015的插件
{
  "presets" : ["es2015"]
}
17.在react中的jsx文件需要编译
18.npm install babel-preset-react --save-dev安装react的插件
19.在.babelrc中"presets"数组中添加元素 'react',
20. babel可以和构架工具一起用
21.npm install gulp gulp-babel --save-dev 安装gulp和gulp-babel
22.可以使用babel-core的brower.js在浏览器上实时编译(但是貌似用不了,用gulp-plumber替代)
23.http://blog.csdn.net/u011254082/article/details/51534394
使用gulp-plumber插件处理编译错误进程挂起
